#!/bin/bash
# This file is auto-generated by "make init"
# vim: autoindent tabstop=4 shiftwidth=4 expandtab softtabstop=4 filetype=bash
# -*- mode: sh; indent-tabs-mode: nil; sh-basic-offset: 4 -*-

source ${REG_ROOT}/system.config
source ${REG_ROOT}/lab.config
source ${REG_ROOT}/templates/common/worker_labels.config
source ${REG_ROOT}/init.sh
source ${REG_ROOT}/templates/common/remotehost_functions
source ${REG_ROOT}/templates/common/functions

# Variables if one or more remotehost
# endpoints are used (topo=ingress)
#####################################
read -a BMLHOSTS <<< "$BM_HOSTS"

# trafficgen host
remhost1=${BMLHOSTS[0]}
# ocp admin node
k8shost1=$REG_OCPHOST
k8susr=$REG_KNI_USER    # Might be "root" or "kni" for some installations

userenv=alma8           # trafficgen only work with alma8
osruntime=chroot        # can be pod or kata for OCP (not yet verified for SRIOV), chroot for remotehost

resources_file="`/bin/pwd`/resources.json"
annotations_file="`/bin/pwd`/annotations.json"
securityContext_file="`/bin/pwd`/securityContext.json"
mv_params_file="`/bin/pwd`/mv-params.json"
max_failures=1          # After this many failed samples=$NUM_SAMPLE the run will quit

#
# For tags I should ger the NIC types of each sides and MTU
#
tags="dpdk:trafficgen"

# get the PCI address of the TREX interfaces
device_info=$REG_ROOT/SETUP_GROUP/DPDK/INSTALL/trex-device-info.json  # was created by ../DPDK/INSTALL/"make init" at init-lab time
query_pci_by_interface() {
    local json_file=$1
    local interface_name=$2

    [[ -z "$json_file" || -z "$interface_name" ]] && { echo "Usage: query_pci_by_interface <json_file> <interface_name>"; return 1; }

    local pci_addr
    pci_addr=$(jq -r --arg iface "$interface_name" '.[] | select(.interface_name == $iface) | .pci_addr' "$json_file")

    if [[ -n "$pci_addr" && "$pci_addr" != "null" ]]; then
        echo "$pci_addr"
    else
        echo "Error: Interface $interface_name not found in $json_file" >&2
        return 1
    fi
}
pci1=("$(query_pci_by_interface "${device_info}" "$REG_DPDK_NIC_1")")
pci2=("$(query_pci_by_interface "${device_info}" "$REG_DPDK_NIC_2")")
TREX_ACTIVE_DEVICES_PCI="$pci1,$pci2"
TREX_DEVICES_PCI=$TREX_ACTIVE_DEVICES_PCI
case "${REG_DPDK_NIC_MODEL}" in
    X710|XXV710|E810)
        SERVER_DEVICES="VAR:PCIDEVICE_OPENSHIFT_IO_INTELNIC_EAST,VAR:PCIDEVICE_OPENSHIFT_IO_INTELNIC_WEST"
        ;;
    MLX6)
        SERVER_DEVICES="VAR:PCIDEVICE_OPENSHIFT_IO_MLXNIC_EAST,VAR:PCIDEVICE_OPENSHIFT_IO_MLXNIC_WEST"
        ;;
    *)
        echo "Unsupport NIC $REG_DPDK_NIC_MODEL"
        exit 1
        ;;
esac

# Update mv-params. Pita. W/o those ":space:", it failed.
sed -i -e "s/\"arg\": \"trex-active-devices\",[[:space:]]*\"vals\": \[ \"[^\"]*\" \],[[:space:]]*/\"arg\": \"trex-active-devices\", \"vals\": [ \"$TREX_ACTIVE_DEVICES_PCI\" ],/" \
    -e "s/\"arg\": \"trex-devices\",[[:space:]]*\"vals\": \[ \"[^\"]*\" \],[[:space:]]*/\"arg\": \"trex-devices\", \"vals\": [ \"$TREX_DEVICES_PCI\" ],/" \
    -e "s/\"arg\": \"server-devices\",[[:space:]]*\"vals\": \[ \"[^\"]*\" \],[[:space:]]*/\"arg\": \"server-devices\", \"vals\": [ \"$SERVER_DEVICES\" ],/" \
    mv-params.json

#  --no-tools \

ARGS=" --tags $tags \
  --tool-params tool-params.json \
  --max-rb-attempts=3 \
  --mv-params $mv_params_file \
  --num-samples ${NUM_SAMPLES} \
  --max-sample-failures ${max_failures} \
  --endpoint remotehosts,host:$remhost1,user:root,client:1,userenv:${userenv},cpu-partitioning:true \
  --endpoint k8s,host:$k8shost1,user:${k8susr},server:1,userenv:${userenv},resources:server-1:$resources_file,annotations:server-1:$annotations_file,securityContext:server-1:$securityContext_file,hugepage:1,cpu-partitioning:server-1:1,runtimeClassName:performance-${MCP}"

reg-c2j-config.py --name trafficgen --output all-in-one.json $ARGS && \
time crucible run --from-file all-in-one.json


